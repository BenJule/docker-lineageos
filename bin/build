#!/bin/bash

if [ -z "$DEVICE_LIST" ]; then
    echo "Error: No device specified"
    exit 1
fi

if [ -z "$NAME" ] || [ -z "$EMAIL" ]; then
    echo "Warn: Name/Email not provided"
else
    git config --global user.name $NAME
    git config --global user.email $EMAIL
fi

# Allocate RAM to jack
export ANDROID_JACK_VM_ARGS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx$JACK_RAM"

# Initialize ccache if needed
if [ $USE_CCACHE == 1 ]; then
    echo "Initializing ccache in /srv/ccache..."
    if [ ! -f /srv/ccache/ccache.conf ]; then
        export CCACHE_DIR=/srv/ccache ccache -M $CCACHE_SIZE
    else
        export CCACHE_DIR=/srv/ccache
    fi
fi

# Initialize repository if needed
if [ ! "$(ls -A)" ]; then
    repo init -u https://github.com/LineageOS/android.git -b cm-$TAG
fi

repo sync
source build/envsetup.sh

# The following code is in part from julianxhokaxhiu/docker-lineage-cicd
IFS=','
for codename in $DEVICE_LIST; do
    if [ ! -z "$codename" ]; then
        breakfast $codename
        if [ $SIGN_BUILDS == 1 ]; then
            mka target-files-package dist
            ./build/tools/releasetools/sign_target_files_apks -o \
                -d /build/android-certs \
                out/dist/*-target_files-*.zip \
                out/dist/signed-target_files.zip
            ./build/tools/releasetools/ota_from_target_files \
                -k /build/android-certs/releasekey \
                --block --backup=true \
                out/dist/signed-target_files.zip \
                /build/zips/lineage-$TAG-"$(date +%Y%m%d)"-$TYPE-$codename.zip
        elif [ $SIGN_BUILDS == 0]; then
            brunch $codename
        fi
        /usr/bin/make clean
    fi
done
